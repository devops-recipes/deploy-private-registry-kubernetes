resources:

  - name: dprk_app_img
    type: image
    # replace drship_dockerhub with your docker hub integration name
    integration: drship_dockerhub
    pointer:
      # replace devopsrecipes/dprk_node_sample_app with your docker registry
      # repository
      sourceName: devopsrecipes/deploy-kube-private-registry-node-app
    seed:
      versionName: "latest"

  - name: dprk_gitRepo
    type: gitRepo
    # replace dr_github with your GitHub integration name
    integration: drship_github
    pointer:
      # replace with source code location (e.g. GitHub) where you cloned this
      # sample project.
      sourceName: devops-recipes/deploy-private-registry-kubernetes
      branch: master

  - name: dprk_cliConfig
    type: cliConfig
    integration: drship_gcloud
    pointer:
      # replace us-central1-a with your availability zone
      region: us-central1-a

  - name: dprk_dockerhub
    type: integration
    integration: drship_dockerhub

  - name: drship_keyvalue
    type: integration
    integration: drship_keyvalue

  - name: dprk_pod_spec
    type: dockerOptions
    version:
      pod:
        imagePullSecrets:
          - name: ${dprk_secret_key_name}

  - name: dprk_lb
    type: loadBalancer
    #replace with your Kubernetes integration name
    integration: drship_kube_dprk
    pointer:
      sourceName: "dprk-loadbalancer"
      method: LoadBalancer
      # replace devops-test-cluster with your google container engine cluster name
      clusterName: "dprk-test-cluster"
    version:
      ports:
        - name: testport
          protocol: TCP
          port: 80
      selector:
        shippable.manifestName: "dprk-app-def"
        shippable.jobName: "dprk-app-deploy"

  - name: dprk_kube_cluster
    type: cluster
    #replace with your Kubernetes integration name
    integration: drship_kube_dprk
    pointer:
      # replace dprk-test-cluster with your google container engine cluster name
      sourceName: "dprk-test-cluster"
      # replace us-central1-a with your availability zone
      region: us-central1-a

jobs:

  - name: dprk-app-def
    type: manifest
    steps:
      - IN: dprk_app_img
      - TASK: managed

  - name: dprk_provision_cluster
    type: runSh
    steps:
      - IN: dprk_gitRepo
        # manually trigger the job and not on every commit to the repository
        switch: off
      - IN: dprk_dockerhub
      - IN: drship_keyvalue
      - IN: dprk_cliConfig
        scopes:
          - gke
      - IN: dprk-app-def
      - OUT: dprk_pod_spec
      - TASK:
        - script: |
            # create the cluster on GKE
            $DPRK_GITREPO_PATH/gitRepo/provision_gke_cluster.sh $dprk_cluster_name $DPRK_CLICONFIG_POINTER_REGION

            # Delete and create the secret
            echo "Docker hub url "$DPRK_DOCKERHUB_INTEGRATION_URL
            kubectl delete secret $dprk_secret_key_name 2>/dev/null || echo "secret does not exist"
            kubectl create secret docker-registry $dprk_secret_key_name --docker-username='$DPRK_DOCKERHUB_INTEGRATION_USERNAME' --docker-password='$DPRK_DOCKERHUB_INTEGRATION_PASSWORD' --docker-email='$DPRK_DOCKERHUB_INTEGRATION_EMAIL' --docker-server='$DPRK_DOCKERHUB_INTEGRATION_URL'

            # replace the placeholder in the pod spec template for imagePullSecrets
            pod_spec_template=$(shipctl get_resource_meta dprk_pod_spec)/version.json
            shipctl replace $pod_spec_template

  - name: dprk-app-deploy
    type: deploy
    method: replace
    steps:
      - IN: dprk_provision_cluster
      - IN: dprk_pod_spec
      - IN: dprk-app-def
        switch: off
      - IN: dprk_kube_cluster

  - name: dprk-provision-lb
    type: provision
    steps:
      - IN: dprk_lb
      - IN: dprk-app-deploy
